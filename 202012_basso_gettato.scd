// =====================================================================
// SuperCollider Workspace
// =====================================================================

////////////////////////////////////////////////////////////////////////
// basso gettato sc tweet autopsy by zepadovani;
// Original Tweet
play{x=165;b=SinOsc;p=Trig.ar(Saw.ar(x),1);y=b.ar(p*x);z=b.ar(p);(GVerb.ar(GrainIn.ar(2,y,y/2,z,p*z,-1),9))/9}
// "p" creates a "nice series" of numbers above 0 and below 1 with the
// duration of 1 second
{Saw.ar(165)}.plot(0.1) //simple sawtooth wave
{Trig.ar(Saw.ar(165),1).poll}.play //get values just after the "above 0" jump
{Trig.ar(Saw.ar(165),1)}.plot(30) // numbers generated
// "z" is a variable LFO as it is a SinOsc with frequency argument equal to
// the current "nice number" generated by play
{SinOsc.ar((Trig.ar(Saw.ar(165),1)).poll)}.play
// "y" is a faster version of "z", as the sinusoids have the frequency values
// generated by the multiplication of "p" "nice values and 165
{SinOsc.ar((Trig.ar(Saw.ar(165),1)*165).poll)}.play
// grainin creates grains of z at y rate, duration is y/2 and pan of each grain
// is given by p*z althought z itself is not in the audible range, the rate makes
// the little pulses audible either as a slow rhythm(when y is very low) or as
// a low note(when y is trigger argument:
GrainIn.ar(2,y,y/2,z,p*z,-1)
//
{Saw.ar(0.1)}.plot(1)

////////////////////////////////////////////////////////////
play{
	x = 165;
	b = SinOsc;
	p = Trig.ar(Saw.ar(x),1);
	y = b.ar(p*x);
	z = b.ar(p);
	(GVerb.ar(GrainIn.ar(2,y,y/2,z,p*z,-1),2))/9
}
//

(
SynthDef(\bassogettato, { |out=0|
	var p, y, z, env, sound;
	
	p = Trig.ar(Saw.ar(\f.kr(165)),\tf.kr(1));
	y = SinOsc.ar(p * \f.kr(165));
	z = SinOsc.ar(p);

	env = Env.adsr(\atk.kr(0.1),\dec.kr(0.02),\sus.kr(0.2),\rel.kr(0.3)).kr(2);

	sound = GVerb.ar(GrainIn.ar(2,y,y/2,z,\pan.kr(0),-1),\reverb.kr(2));

	Out.ar(out, sound*env*\amp.kr(0.1))
}).add;
)


x = Synth(\bassogettato);
x.set(\amp, 0);
x.set(\f, 15, \atk, 0.1, \tf, 1, \rel, 1, \pan, 0, \amp, 0.2, \reverb, 0.9);